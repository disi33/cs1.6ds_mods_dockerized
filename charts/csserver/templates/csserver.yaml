apiVersion: v1
kind: Namespace
metadata:
  name: csserver
  labels:
    app.kubernetes.io/name: csserver
    app.kubernetes.io/part-of: csserver
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.imagePullSecrets.name }}
  namespace: csserver
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ template "imagePullSecret" . }}
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: csserver-app
  namespace: csserver
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: csserver-app
    spec:
      containers:
      - name: csserver-deployment
        image: {{ .Values.image.repository }}/csserver:{{ .Values.image.tag }}
        ports:
        - containerPort: 27005
        - containerPort: 27015
        - containerPort: 1200
        env:
        - name: TITLE
          value: {{ .Values.title }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
          namespace: csserver
---
apiVersion: v1
kind: Service
metadata:
  name: csserver-service
  namespace: csserver
spec:
  type: NodePort
  ports:
  - protocol: UDP
    port: 27005
    targetPort: 27005
    name: csport27005
  - protocol: UDP
    port: 27015
    targetPort: 27015
    name: csport27015
  - protocol: UDP
    port: 1200
    targetPort: 1200
    name: csport1200
  - protocol: TCP
    port: 27005
    targetPort: 27005
    name: csport27005tcp
  - protocol: TCP
    port: 27015
    targetPort: 27015
    name: csport27015tcp
  - protocol: TCP
    port: 1200
    targetPort: 1200
    name: csport1200tcp
  - protocol: TCP
    port: 80
    targetPort: 80
    name: csport80
  - protocol: TCP
    port: 443
    targetPort: 443
    name: csport443
  selector:
    app: csserver-service
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: udp-services
  namespace: csserver
data:
  27015: "csserver/csserver-service:27015"
  27005: "csserver/csserver-service:27005"
  1200: "csserver/csserver-service:1200"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: tcp-services
  namespace: csserver
data:
  27015: "csserver/csserver-service:27015"
  27005: "csserver/csserver-service:27005"
  1200: "csserver/csserver-service:1200"
  80: "csserver/csserver-service:80"
  443: "csserver/csserver-service:442"
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "ingress-controller-leader-nginx"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: csserver

---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: nginx-ingress-clusterrole-nisa-binding
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: csserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx-cs
      app.kubernetes.io/part-of: csserver
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx-cs
        app.kubernetes.io/part-of: csserver
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: nginx-ingress-serviceaccount
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.25.1
          args:
            - /nginx-ingress-controller
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx-cs
            - --annotations-prefix=nginx.ingress.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
            - name: cs27005
              containerPort: 27005
            - name: cs27015
              containerPort: 27015
            - name: cs1200
              containerPort: 1200
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-nginx-cs
  namespace: csserver
  labels:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
spec:
  type: LoadBalancer
  ports:
    - name: proxied-tcp-27005
      port: 27005
      targetPort: 27005
      protocol: TCP
    - name: proxied-tcp-27015
      port: 27015
      targetPort: 27015
      protocol: TCP
    - name: proxied-tcp-1200
      port: 1200
      targetPort: 1200
      protocol: TCP
  selector:
    app.kubernetes.io/name: ingress-nginx-cs
    app.kubernetes.io/part-of: csserver
---